name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: 'Sync source code'
        uses: actions/checkout@v2
      - name: Install Dependencies
        uses: msys2/setup-msys2@v2
        with:
          install: mingw-w64-x86_64-meson mingw-w64-x86_64-ninja mingw-w64-x86_64-pkg-config mingw-w64-x86_64-gcc mingw-w64-x86_64-SDL2 mingw-w64-x86_64-SDL2_image mingw-w64-x86_64-readline mingw-w64-x86_64-capstone
      - name: Build Hades
        run: |
          meson build -Dstatic_executable=true
          cd build
          ninja
          ls -lRa
      - name: Test Hades
        run: |
          meson build.test -Denable_debugger=true -Denable_sdl2=false
          cd build.test
          ninja
          wget -q "https://github.com/Cult-of-GBA/BIOS/raw/master/bios.bin" -O bios.bin
          wget -q "https://github.com/jsmolka/gba-tests/raw/master/thumb/thumb.gba" -O thumb.gba
          wget -q "https://github.com/jsmolka/gba-tests/raw/master/arm/arm.gba" -O arm.gba
          echo "main; s 1000000; r" | ./hades -d ./thumb.gba | grep "r7: 0x00000000" > /dev/null && echo "Thumb: OK" || ( echo "Thumb: KO" ; exit 1 )
          echo "main; s 1000000; r" | ./hades -d ./arm.gba | grep "ip: 0x00000000" > /dev/null && echo "ARM: OK" || ( echo "ARM: KO" ; exit 1 )
      - name: Collect Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hades-win64
          path: build/hades.exe
          if-no-files-found: error

  mac-os:
    runs-on: macos-latest
    steps:
      - name: 'Sync source code'
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          brew install meson ninja sdl2 sdl2_image readline capstone
      - name: Build Hades
        run: |
          meson build --werror
          cd build
          ninja
      - name: Test Hades
        env:
          PKG_CONFIG_PATH: '/usr/local/opt/readline/lib/pkgconfig'
        run: |
          meson build.test -Denable_debugger=true -Denable_sdl2=false
          cd build.test
          ninja
          wget -q "https://github.com/Cult-of-GBA/BIOS/raw/master/bios.bin" -O bios.bin
          wget -q "https://github.com/jsmolka/gba-tests/raw/master/thumb/thumb.gba" -O thumb.gba
          wget -q "https://github.com/jsmolka/gba-tests/raw/master/arm/arm.gba" -O arm.gba
          echo "main; s 1000000; r" | ./hades -d ./thumb.gba | grep "r7: 0x00000000" > /dev/null && echo "Thumb: OK" || ( echo "Thumb: KO" ; exit 1 )
          echo "main; s 1000000; r" | ./hades -d ./arm.gba | grep "ip: 0x00000000" > /dev/null && echo "ARM: OK" || ( echo "ARM: KO" ; exit 1 )
      - name: Collect Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hades-macos
          path: build/hades
          if-no-files-found: error

  linux:
    runs-on: ubuntu-latest
    steps:
      - name: 'Sync source code'
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y meson ninja-build libsdl2-dev libsdl2-image-dev libreadline-dev libcapstone-dev
      - name: Build Hades
        run: |
          meson build --werror
          cd build
          ninja
      - name: Test Hades
        run: |
          meson build.test -Denable_debugger=true -Denable_sdl2=false
          cd build.test
          ninja
          wget -q "https://github.com/Cult-of-GBA/BIOS/raw/master/bios.bin" -O bios.bin
          wget -q "https://github.com/jsmolka/gba-tests/raw/master/thumb/thumb.gba" -O thumb.gba
          wget -q "https://github.com/jsmolka/gba-tests/raw/master/arm/arm.gba" -O arm.gba
          echo "main; s 1000000; r" | ./hades -d ./thumb.gba | grep "r7: 0x00000000" > /dev/null && echo "Thumb: OK" || ( echo "Thumb: KO" ; exit 1 )
          echo "main; s 1000000; r" | ./hades -d ./arm.gba | grep "ip: 0x00000000" > /dev/null && echo "ARM: OK" || ( echo "ARM: KO" ; exit 1 )
      - name: Collect Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hades-linux
          path: build/hades
          if-no-files-found: error